/*
 * FINBOURNE Scheduler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.517
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.scheduler.api;

import com.finbourne.scheduler.ApiException;
import java.io.File;
import com.finbourne.scheduler.model.Image;
import com.finbourne.scheduler.model.LusidProblemDetails;
import com.finbourne.scheduler.model.LusidValidationProblemDetails;
import com.finbourne.scheduler.model.ResourceListOfImageSummary;
import com.finbourne.scheduler.model.ResourceListOfRepository;
import com.finbourne.scheduler.model.UploadImageInstructions;
import com.finbourne.scheduler.model.UploadImageRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImagesApi
 */
@Ignore
public class ImagesApiTest {

    private final ImagesApi api = new ImagesApi();

    
    /**
     * [EXPERIMENTAL] DeleteImage: Delete an image from Harbor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteImageTest() throws ApiException {
        String name = null;
        String response = api.deleteImage(name);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] DownloadImage: Download the file from Harbor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadImageTest() throws ApiException {
        String name = null;
        File response = api.downloadImage(name);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] GetImage: Get an image metadata from Harbor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getImageTest() throws ApiException {
        String name = null;
        Image response = api.getImage(name);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] ListImages: List all images in a Repository
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listImagesTest() throws ApiException {
        String name = null;
        String page = null;
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        ResourceListOfImageSummary response = api.listImages(name, page, sortBy, start, limit, filter);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] ListRepositories: List all repositories
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRepositoriesTest() throws ApiException {
        String page = null;
        List<String> sortBy = null;
        Integer start = null;
        Integer limit = null;
        String filter = null;
        ResourceListOfRepository response = api.listRepositories(page, sortBy, start, limit, filter);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] UploadImage: Uploads an image to be used for Scheduler jobs
     *
     * Every image must have at least one tag
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadImageTest() throws ApiException {
        UploadImageRequest uploadImageRequest = null;
        UploadImageInstructions response = api.uploadImage(uploadImageRequest);

        // TODO: test validations
    }
    
}
