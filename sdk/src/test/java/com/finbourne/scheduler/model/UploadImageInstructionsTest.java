/*
 * FINBOURNE Scheduler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.517
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.scheduler.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UploadImageInstructions
 */
public class UploadImageInstructionsTest {
    private final UploadImageInstructions model = new UploadImageInstructions();

    /**
     * Model tests for UploadImageInstructions
     */
    @Test
    public void testUploadImageInstructions() {
        // TODO: test UploadImageInstructions
    }

    /**
     * Test the property 'dockerLoginCommand'
     */
    @Test
    public void dockerLoginCommandTest() {
        // TODO: test dockerLoginCommand
    }

    /**
     * Test the property 'buildVersionedDockerImageCommand'
     */
    @Test
    public void buildVersionedDockerImageCommandTest() {
        // TODO: test buildVersionedDockerImageCommand
    }

    /**
     * Test the property 'tagVersionedDockerImageCommand'
     */
    @Test
    public void tagVersionedDockerImageCommandTest() {
        // TODO: test tagVersionedDockerImageCommand
    }

    /**
     * Test the property 'pushVersionedDockerImageCommand'
     */
    @Test
    public void pushVersionedDockerImageCommandTest() {
        // TODO: test pushVersionedDockerImageCommand
    }

    /**
     * Test the property 'tagLatestDockerImageCommand'
     */
    @Test
    public void tagLatestDockerImageCommandTest() {
        // TODO: test tagLatestDockerImageCommand
    }

    /**
     * Test the property 'pushLatestDockerImageCommand'
     */
    @Test
    public void pushLatestDockerImageCommandTest() {
        // TODO: test pushLatestDockerImageCommand
    }

    /**
     * Test the property 'expiryTime'
     */
    @Test
    public void expiryTimeTest() {
        // TODO: test expiryTime
    }

}
